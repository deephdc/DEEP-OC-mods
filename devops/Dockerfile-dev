ARG tf_ver=1.15.0
ARG py_ver=py3

# Base image
FROM tensorflow/tensorflow:${tf_ver}-${py_ver}

LABEL maintainer='Stefan Dlugolinsky'
LABEL version='0.4.0'
LABEL description='MODS (Massive Online Data Streams) - dev'

# What user branch to clone (!)
ARG branch=master
# If to install JupyterLab
ARG jlab=true

# Install ubuntu updates and related stuff
RUN DEBIAN_FRONTEND=noninteractive \
    apt-get update && \
    apt-get install -y --no-install-recommends \
         git \
         curl

# install rclone
RUN curl https://downloads.rclone.org/rclone-current-linux-amd64.deb --output rclone-current-linux-amd64.deb && \
    dpkg -i rclone-current-linux-amd64.deb && \
    apt install -f && \
    rm rclone-current-linux-amd64.deb && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /root/.cache/pip/* && \
    rm -rf /tmp/*

ENV LANG C.UTF-8

# Set the working directory
WORKDIR /srv

COPY scripts/build-n-run-deepaas.sh build-n-run-deepaas.sh

# Disable FLAAT authentication by default
ENV DISABLE_AUTHENTICATION_AND_ASSUME_AUTHENTICATED_USER yes

# Install JupyterLab
ENV JUPYTER_CONFIG_DIR /srv/.jupyter/
ENV SHELL /bin/bash
RUN if [ "$jlab" = true ]; then \
       apt update && \
       apt install -y nodejs npm && \
       apt-get clean && \
       rm -rf /var/lib/apt/lists/* && \
       rm -rf /tmp/* && \
       pip3 install --no-cache-dir jupyterlab ; \
       rm -rf /root/.cache/pip3/* && \
       rm -rf /tmp/* && \
       git clone https://github.com/deephdc/deep-jupyter /srv/.jupyter ; \
    else echo "[INFO] Skip JupyterLab installation!"; fi

# Open DEEPaaS port
EXPOSE 5000

CMD tail -f /dev/null
